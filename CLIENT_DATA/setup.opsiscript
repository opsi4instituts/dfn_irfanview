; Copyright (c) uib gmbh (www.uib.de)
; This sourcecode is owned by uib
; and published under the Terms of the General Public License.
; credits: http://www.opsi.org/en/credits/

[Initial]
setLogLevel=6
;  Log Errors in Logfile but don't abort:
ExitOnError=True
; Show syntax errors in the script:
ScriptErrorMessages=on
; Dont trace step by step through the script:
TraceMode=off
; let started programs run in front of the winst window
StayOnTop=True
 

[Actions]
requiredWinstVersion >= "4.11.2.6"

DefVar $MsiId32$
DefVar $UninstallProgram32$
DefVar $MsiId64$
DefVar $UninstallProgram64$
DefVar $LogDir$
DefVar $ProductId$
DefVar $MinimumSpace$
DefVar $InstallDir32$
DefVar $ExitCode$
DefVar $LicenseRequired$
DefVar $LicenseKey$
DefVar $LicensePool$
DefVar $Version$
DefVar $PrettyVersion$
DefVar $Inst_Prg$
DefVar $Inst_Prg_Plg$
DefVar $Inst_Cmd$
DefVar $Inst_Cmd_Plg$
DefVar $Uninst_Prg$
DefVar $language$
DefVar $default_language$
DefVar $ini_file_name$
DefVar $system_language$
DefVar $language_inifile_dll$ 
DefVar $language_inifile_lang$ 
DefVar $language_files_path$
DefVar $help_files_path$
DefVar $DesktopIcon$
DefVar $CustomPostInstall$
DefVar $CustomPostDeinstall$ 
DefVar $ProductName$
DefVar $RegPath$
DefVar $PathToExe$

DefStringList $languagemap$

Set $LogDir$ = "%SystemDrive%\tmp"

; ----------------------------------------------------------------
; - Please edit the following values                             -
; ----------------------------------------------------------------
;$ProductId$ should be the name of the product in opsi
; therefore please: only lower letters, no umlauts,
; no white space use '-' as a seperator
Set $ProductId$       			= "irfanview"
Set $ProductName$ = "IrfanView"
;Kein Punkt in der Versionsnummer! 4.30 ist 430, 4.40 ist 440 oder 4.51 ist 451!
Set $Version$         			= "438"
Set $PrettyVersion$	  			= "4.38"
Set $MinimumSpace$    			= "50 MB"
; the path were we find the product after the installation
Set $InstallDir32$      		= "%ProgramFiles32Dir%\IrfanView"
Set $LicenseRequired$ 			= "false"
Set $LicensePool$     			= "p_" + $ProductId$

;Defaults initializing
Set $default_language$ 			= "en"
Set $ini_file_name$					= "i_view32.ini"
Set $Inst_Prg$ 							= "iview"+$Version$+"g_setup.exe"
Set $language_inifile_dll$ 	= "ENGLISH"
Set $language_inifile_lang$ = "English"

Set $Inst_Prg_Plg$ 					= "irfanview_plugins_"+$Version$+"_setup.exe"

Set $Inst_Cmd$ 							= ' /silent /folder="'+$InstallDir32$+'" /desktop=0 /allusers=1 /group=1 /assoc=1'
Set $Inst_Cmd_Plg$ 					= ' /silent'
Set $Uninst_Prg$        		= "iv_uninstall.exe"

Set $language_files_path$ 	= $InstallDir32$ + "\Languages"
Set $help_files_path$ 			= $InstallDir32$ + "\Help" 
Set $language$ 							= GetProductProperty("language", $default_language$)
Set $RegPath$		= "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall"
; ----------------------------------------------------------------
if not(HasMinimumSpace ("%SYSTEMDRIVE%", $MinimumSpace$))
				LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
				isFatalError "No Space"
				; Stop process and set installation status to failed
else
				killtask "i_view32.exe"
        comment "Show product picture"
        ShowBitmap "%ScriptPath%\" + $ProductId$ + ".png" "Irfan View " + $PrettyVersion$

        if FileExists("%ScriptPath%\delsub.opsiscript")
                comment "Start uninstall sub section"
                Sub "%ScriptPath%\delsub.opsiscript"
        endif

        if $LicenseRequired$ = "true"
                comment "Licensing required, reserve license and get license key"
                Sub_get_licensekey
        endif

        Message "Installing " + $ProductId$ + "..."
        comment "Start setup program"			

				;LANGUAGE TEST
				if ($language$ = "auto")
					comment "decide which language to use"
					set $languagemap$ = GetLocaleInfoMap
					set  $system_language$ = lower(getValue("system_default_language_id", $languagemap$))
					if $system_language$ = "0407"
						comment "The detected language code is German"
						Set $language_inifile_dll$ = "DEUTSCH.DLL"
						Set $language_inifile_lang$ = "Deutsch"
					endif
					if $system_language$ = "040c"
						comment "The detected language code is French"
						Set $language_inifile_dll$ = "FRENCH.DLL"
						Set $language_inifile_lang$ = "Francais"
					endif
					if ( NOT($system_language$ = "040c") AND NOT($system_language$ = "0407") )
						comment "Not Geman, nor French - defaulting to English"
						Set $language_inifile_dll$ = "ENGLISH"
						Set $language_inifile_lang$ = "English"
					endif
				endif
				
				if ($language$ = "de")
					Set $language_inifile_dll$ = "DEUTSCH.DLL"
					Set $language_inifile_lang$ = "Deutsch"
				endif	        
		    
		    if ($language$ = "fr")
					Set $language_inifile_dll$ = "FRENCH.DLL"
					Set $language_inifile_lang$ = "Francais"
				endif
					   
				if ($language$ = "en")
					Set $language_inifile_dll$ = "ENGLISH"
					Set $language_inifile_lang$ = "English"
				endif	        

				;INSTALLATION
				comment "Installing base program"
				Winbatch_install
				Sub_check_exitcode

				comment "Installing languages"
				Files_install_languages
				Sub_check_exitcode
				
				comment "Installing Plugins"
        Winbatch_Install_Plugins
				Sub_check_exitcode
					
				Patches_i_view32.ini $InstallDir32$+"\"+$ini_file_name$
				;comment "Copying ini-File..."
				;Files_install
				;Sub_check_exitcode
				
				; Pfad zur Exe aus Registry holen und aufbereiten: "C:\Programme\IrfanView\i_view32.exe,0"
				Set $PathToExe$ = GetRegistryStringValue32("[" + $RegPath$ + "\" + $ProductId$ + "] DisplayIcon")
				; Registry-Wert nach Kommata splitten und ersten Wert nehmen
				Set $PathToExe$ = takeString (0, splitString ( $PathToExe$ , ','))

				Set $DesktopIcon$ = getProductProperty("desktopicon","no")
				if $DesktopIcon$ = "yes"
					comment "Create common desktop icon"
					Linkfolder_install_desktopicon	
				endif
				
				comment "include custom post install file"
				set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
				if not ($CustomPostInstall$ = "none")
					if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
						include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
					endif
				endif		
endif
 
[Winbatch_install]
; Choose one of the following examples as basis for your installation
; You can use $LicenseKey$ var to pass a license key to the installer
;
; === Nullsoft Scriptable Install System ================================================================
"%ScriptPath%\$Inst_Prg$"+" $Inst_Cmd$"
 
[Files_install_languages]
copy "%scriptpath%\languages\*.*" $language_files_path$
copy "%scriptpath%\help\*.*" $help_files_path$
 
[Winbatch_install_64]
; Choose one of the following examples as basis for your installation
; You can use $LicenseKey$ var to pass a license key to the installer
;
; === Nullsoft Scriptable Install System ================================================================
"%ScriptPath%\$Inst_Prg$"+" $Inst_Cmd64$"
 
[Winbatch_Install_Plugins]
; Install the addional plugins 
"%ScriptPath%\$Inst_Prg_Plg$"+" $Inst_Cmd_Plg$"
 
[Patches_i_view32.ini]
change [Language] DLL=$language_inifile_dll$
change [Language] Lang=$language_inifile_lang$

[Files_install]
; Example of recursively copying some files into the installation directory:
copy "$Inst_Copy_Cmd$" "$InstallDir32$"
 
[Files_install_64]
; Example of recursively copying some files into the installation directory:
copy "%ScriptPath%\*.ini" "$InstallDir64$"

[Linkfolder_install_desktopicon]
set_basefolder common_desktopdirectory
set_subfolder ""

set_link
 	name: $ProductName$
 	target: $PathToExe$
end_link

[Sub_get_licensekey]
if opsiLicenseManagementEnabled
	comment "License management is enabled and will be used"

	comment "Trying to get a license key"
	Set $LicenseKey$ = demandLicenseKey ($LicensePool$)
	; If there is an assignment of exactly one licensepool to the product the following call is possible:
	; Set $LicenseKey$ = demandLicenseKey ("", $ProductId$)
	;
	; If there is an assignment of a license pool to a windows software id, it is possible to use:
	; DefVar $WindowsSoftwareId$
	; $WindowsSoftwareId$ = "..."
	; Set $LicenseKey$ = demandLicenseKey ("", "", $WindowsSoftwareId$)
	
	DefVar $ServiceErrorClass$
	set $ServiceErrorClass$ = getLastServiceErrorClass
	comment "Error class: " + $ServiceErrorClass$
	
	if $ServiceErrorClass$ = "None"
		comment "Everything fine, we got the license key '" + $LicenseKey$ + "'"
	else
		if $ServiceErrorClass$ = "LicenseConfigurationError"
			LogError "Fatal: license configuration must be corrected"
			LogError getLastServiceErrorMessage
			isFatalError
		else 
			if $ServiceErrorClass$ = "LicenseMissingError"
				LogError "Fatal: required license is not supplied"
				isFatalError
			endif
		endif
	endif
else
	LogError "Fatal: license required, but license management not enabled"
	isFatalError
endif


[Sub_check_exitcode]
comment "Test for installation success via exit code"
set $ExitCode$ = getLastExitCode
; informations to exit codes see
; http://msdn.microsoft.com/en-us/library/aa372835(VS.85).aspx
; http://msdn.microsoft.com/en-us/library/aa368542.aspx
if ($ExitCode$ = "0")
	comment "Looks good: setup program gives exitcode zero"
else
	comment "Setup program gives a exitcode unequal zero: " + $ExitCode$
	if ($ExitCode$ = "1605")
		comment "ERROR_UNKNOWN_PRODUCT	1605	This action is only valid for products that are currently installed."
		comment "Uninstall of a not installed product failed - no problem"
	else
		if ($ExitCode$ = "1641")
			comment "looks good: setup program gives exitcode 1641"
			comment "ERROR_SUCCESS_REBOOT_INITIATED	1641	The installer has initiated a restart. This message is indicative of a success."
		else
			if ($ExitCode$ = "3010")
				comment "looks good: setup program gives exitcode 3010"
				comment "ERROR_SUCCESS_REBOOT_REQUIRED	3010	A restart is required to complete the install. This message is indicative of a success."
			else
				logError "Fatal: Setup program gives an unknown exitcode unequal zero: " + $ExitCode$
				isFatalError
			endif
		endif
	endif
endif

